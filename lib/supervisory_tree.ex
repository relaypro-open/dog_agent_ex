# Generated by erl2ex (http://github.com/dazuma/erl2ex)
# From Erlang source: (Unknown source file)
# At: 2022-12-26 15:52:20


defmodule :supervisory_tree do

  def tree() do
    lst = :lists.map(fn app ->
      {appName, _description, _id} = app
      appMasterPid = :application_controller.get_master(appName)
      case(appMasterPid) do
        :undefined ->
          {appName, []}
        _ ->
          {appMasterChildPid, _appMasterName} = :application_master.get_child(appMasterPid)
          get_children(appName, appMasterChildPid)
      end
    end, :application.which_applications())
    for({k, v} <- lst, v !== [], into: [], do: {k, v})
  end


  defp get_children({name, pid, :supervisor, _nameList}) do
    case(pid) do
      :undefined ->
        {name, []}
      _ ->
        childList = :supervisor.which_children(pid)
        {name, :lists.map(fn child -> get_children(child) end, childList)}
    end
  end

  defp get_children({name, pid, :worker, _nameList}) do
    {name, pid}
  end


  defp get_children(appName, pid) do
    children = :supervisor.which_children(pid)
    {appName, :lists.map(fn child -> get_children(child) end, children)}
  end

end
