pipeline {
    agent { label 'docker' }

    environment {
        tag = VersionNumber(versionNumberString: '${BUILD_TIMESTAMP}');
        // job environment variables
        BUILD_ENV = "${build_stream}"
        // this is a result of a backwards-incompatible change from JENKINS-24380
        BUILD_ID = "${VersionNumber(projectStartDate: '1970-01-01', versionNumberString: '${BUILD_DATE_FORMATTED, \"yyyy-MM-dd_H-m-s\"}')}"
    }

    stages {
         stage('Setup parameters') {
            steps {
                script { 
                    properties([
                        parameters([
                            choice(
                                name: 'branch',
                                choices: ['main'] 
                            ),
                            string(
                                name: 'hosts', 
                                trim: true
                            ),
                            choice(
                                name: 'env',
                                choices:
                                ['api.qa','api.pro','mob_pro','mob_qa','beta_qa','stage.qa','x.pro','x.qa','dev']
                            ),
                            booleanParam(
                                name: 'deploy',
                                defaultValue: false, 
                                description: '' 
                            ),
                            choice(
                                name: 'erlang_version',
                                choices: ['24.3.4.2'] 
                            ),                    
                            string(
                                name: 'flags', 
                                defaultValue: '--tags upgrade', 
                                trim: true
                            ),
                            choice(
                                name: 'dog_env',
                                choices: ['qa','pro']
                            ),                    
                            choice(
                                name: 'build_stream',
                                choices: ['release','nightly']
                            )                   
                        ])
                    ])
                }
            }
        }
        stage('Build') {
            steps {
                sh 'DOG_ENV="${params.DOG_ENV}" BUILD_ID="${BUILD_ID}" BUILD_STREAM="${buildStream}" make build'
            }

            post {
                success {
                    archiveArtifacts 'dist/*.tar.gz'
                }
            }
        }
        stage('Upload artifact to S3') {
            steps {
                withAWS(profile: 'default') {
                    s3Upload bucket:'product-builds', path: 'dog_agent_ex/', workingDir: 'dist', includePathPattern: '*.tar.gz'
                }
            }
        }
    }
}
